{
  "version": 3,
  "sources": ["../src/lib/log.ts", "../src/module.ts"],
  "sourcesContent": ["\n/** Icon to prepend to log messages, to make it easier to locate them in the console. */\nconst LOG_ICON: string = \"\uD83C\uDFAD\";\nconst LOG_PREFIX: string = `${LOG_ICON} ${__MODULE_TITLE__}`;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype LogFunction = (...data: any[]) => void;\n\nexport const log = wrappedConsoleFunc(console.log);\nexport const warn = wrappedConsoleFunc(console.warn);\nexport const error = wrappedConsoleFunc(console.error);\nexport const info = wrappedConsoleFunc(console.info);\n\nfunction wrappedConsoleFunc(original: LogFunction): LogFunction {\n  return function (this: unknown, ...args: unknown[]): void {\n    const shouldLog: boolean = __DEV__ ? true : typeof args[0] === \"boolean\" ? args[0] : false;\n    const actualArgs = args;\n\n\n    if (shouldLog)\n      original(LOG_PREFIX, \"|\", ...actualArgs);\n\n    // console.log(LOG_PREFIX, \"|\", ...actualArgs);\n  }\n}\n", "import { log } from \"./lib/log\";\n\nHooks.on(\"ready\", () => {\n  if (game instanceof Game && !game.modules.get(\"theatre\")?.active) {\n    ui.notifications?.error(game.i18n?.format(\"THEATREINSERTSMACROS.ERRORS.THEATREINSERTSNOTFOUND\", { MODULENAME: __MODULE_TITLE__ }));\n  } else {\n\n\n    log(`Ready!`);\n  }\n\n});"],
  "mappings": ";;;AAEA,MAAM,WAAmB;AACzB,MAAM,aAAqB,GAAG,QAAQ,IAAI,wBAAgB;AAKnD,MAAM,MAAM,mBAAmB,QAAQ,GAAG;AAC1C,MAAM,OAAO,mBAAmB,QAAQ,IAAI;AAC5C,MAAM,QAAQ,mBAAmB,QAAQ,KAAK;AAC9C,MAAM,OAAO,mBAAmB,QAAQ,IAAI;AAEnD,WAAS,mBAAmB,UAAoC;AAC9D,WAAO,YAA4B,MAAuB;AACxD,YAAM,YAAqB,OAAU,OAAO,OAAO,KAAK,CAAC,MAAM,YAAY,KAAK,CAAC,IAAI;AACrF,YAAM,aAAa;AAGnB,UAAI;AACF,iBAAS,YAAY,KAAK,GAAG,UAAU;AAAA,IAG3C;AAAA,EACF;;;ACtBA,QAAM,GAAG,SAAS,MAAM;AACtB,QAAI,gBAAgB,QAAQ,CAAC,KAAK,QAAQ,IAAI,SAAS,GAAG,QAAQ;AAChE,SAAG,eAAe,MAAM,KAAK,MAAM,OAAO,sDAAsD,EAAE,YAAY,yBAAiB,CAAC,CAAC;AAAA,IACnI,OAAO;AAGL,UAAI,QAAQ;AAAA,IACd;AAAA,EAEF,CAAC;",
  "names": []
}
